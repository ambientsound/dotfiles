#!/bin/bash

set -e

KBASH="`dirname $0`/../"
KBASH=`readlink -m $KBASH`
vim=~/.vim
echo "Setting up kbash in home directory, source = $KBASH"

cd ~
echo "Copying rc files..."
for rcfile in `find $KBASH/rc -type f`; do
    base=`basename $rcfile`
    rm -f ~/$base
    ln -s $rcfile $base
    echo "* $base"
done

echo "Setting up vim..."
if [ -e "$vim" ]; then
    echo -n "Warning: ~/.vim already exists. Do you want to delete it and replace it with the kbash version? [y/N] "
    read yesno
    if [ "$yesno" == "y" ] || [ "$yesno" == "Y" ]; then
        echo "Removing ~/.vim..."
        rm -rf $vim
    else
        echo "NOT touching ~/.vim."
    fi
fi

[ ! -e "$vim" ] && ln -s $KBASH/vim ~/.vim
mkdir -p ~/.vimtemp/

echo "replacing bashrc..."
echo "source $KBASH/kbash.sh" > ~/.bashrc

if [ ! -f ".ssh/authorized_keys" ]; then
    echo "No authorized_keys file found. Paste your public key now and end with newline."
else
    echo "An authorized_keys file has been found."
    echo "If you want to add a key, paste your public key now and end with newline."
fi

echo -n "pubkey> "
read pubkey
if [ "$pubkey" != "" ]; then
    mkdir -m 0700 -p .ssh
    touch .ssh/authorized_keys
    chmod 600 .ssh/authorized_keys
    echo $pubkey >> .ssh/authorized_keys
else
    echo "NOT altering authorized_keys file."
fi

echo "done, please source ~/.bashrc"
